# Generated by Django 4.2.2 on 2025-05-20 05:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import teknopark_app.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=50)),
                ('last_name', models.CharField(blank=True, max_length=50)),
                ('uygunluk', models.BooleanField(default=True)),
                ('sirket', models.CharField(blank=True, max_length=120, null=True)),
                ('sirket_bilgileri', models.TextField(blank=True, null=True)),
                ('web_adresi', models.URLField(blank=True, null=True)),
                ('iletisim_emaili', models.EmailField(blank=True, max_length=254, null=True)),
                ('sirket_logosu', models.ImageField(blank=True, null=True, upload_to=teknopark_app.models.upload_to_logo)),
                ('role', models.CharField(choices=[('investor', 'Yatırımcı'), ('entrepreneur', 'Girişimci'), ('teknopark', 'Teknopark')], max_length=20)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='PersonalNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MeetingDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('total_tables', models.IntegerField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, limit_choices_to={'is_staff': True}, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('table_number', models.IntegerField()),
                ('start_datetime', models.DateTimeField()),
                ('end_datetime', models.DateTimeField()),
                ('entrepreneur_arrived', models.BooleanField(default=False)),
                ('investor_arrived', models.BooleanField(default=False)),
                ('meeting_ended', models.BooleanField(default=False)),
                ('entrepreneur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entrepreneur_matches', to=settings.AUTH_USER_MODEL)),
                ('investor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='investor_matches', to=settings.AUTH_USER_MODEL)),
                ('meeting_day', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teknopark_app.meetingday')),
            ],
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('entrepreneur', 'Girişimci'), ('investor', 'Yatırımcı')], max_length=20)),
                ('overall_satisfaction', models.IntegerField()),
                ('investor_interest', models.IntegerField(blank=True, null=True)),
                ('constructive_feedback', models.IntegerField(blank=True, null=True)),
                ('expression_opportunity', models.IntegerField(blank=True, null=True)),
                ('meeting_environment', models.IntegerField(blank=True, null=True)),
                ('presentation_effectiveness', models.IntegerField(blank=True, null=True)),
                ('idea_potential', models.IntegerField(blank=True, null=True)),
                ('time_efficiency', models.IntegerField(blank=True, null=True)),
                ('communication_skills', models.IntegerField(blank=True, null=True)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('evaluator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teknopark_app.match')),
            ],
        ),
        migrations.AddField(
            model_name='customuser',
            name='categories',
            field=models.ManyToManyField(blank=True, related_name='users', to='teknopark_app.category'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
